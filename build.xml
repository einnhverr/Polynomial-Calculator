<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant"
	 name="Polynomials" basedir="." default="main">

  <property name="src.dir" value="src"/>

  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="view.dir" value="org/einnhverr/pt/polynomials/view"/>
  <property name="model.dir" value="org/einnhverr/pt/polynomials/model"/>
  <property name="controller.dir" value="org/einnhverr/pt/polynomials/controller"/>
  <property name="jar.dir" value="${build.dir}/jar"/>
  <property name="lib.dir" value="lib"/>
  <property name="test.dir" value="test"/>
  <property name="report.dir" value="reports"/>

  <property name="main-class" value="PolynomialsApplication"/>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

  <!-- set properties for dependency resolving -->
  <property name="ivy.install.version" value="2.1.0"/>
  <property name="ivy.dir" value="ivy"/>
  <property name="ivy.jar" value="${ivy.dir}/ivy.jar"/>

  <path id="ivy.lib.path">
    <fileset dir="${ivy.dir}" includes="${ivy.jar}"/>
  </path>

  <!-- dependency resolving targets -->
  <target name="download-ivy" unless="skip.download">
    <mkdir dir="${ivy.dir}"/>
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
	 dest="${ivy.jar}" usetimestamp="true"/>
  </target>

  <target name="install-ivy" depends="download-ivy">
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
	     uri="antlib:org.apache.ivy.ant"
	     classpathref="ivy.lib.path"/>
  </target>

  <target name="resolve" depends="install-ivy" description="retrieve dependencies with ivy">
    <ivy:retrieve/>
  </target>

  <!-- top level targets -->
  <target name="clean" description="clean build files">
    <delete dir="${build.dir}"/>
    <delete dir="${report.dir}"/>
  </target>

  <target name="distclean" depends="clean" description="clean project directory">
    <delete dir="${ivy.dir}"/>
    <delete dir="${lib.dir}"/>
  </target>

  <target name="compile" depends="resolve">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"
	   includeantruntime="false" debug="true" debuglevel="lines,vars,source"/>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
	<attribute name="Main-Class" value="${controller.dir}.${main-class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="jar">
    <java fork="true" classname="${controller.dir}.${main-class}">
      <classpath>
	<path refid="classpath"/>
	<path location="${jar.dir}/${ant.project.name}.jar"/>
      </classpath>
    </java>
  </target>

  <target name="compile-tests" depends="compile" description="build the tests">
    <javac srcdir="${test.dir}" destdir="${classes.dir}" classpathref="classpath"
	   includeantruntime="false" debug="true" debuglevel="lines,vars,source"/>
  </target>

  <target name="test" depends="init-test, compile-tests" description="run tests">
    <junit printsummary="yes" haltonfailure="no" showoutput="yes">
      <classpath>
	<pathelement path="${classes.dir}"/>
	<fileset dir="lib">
	  <include name="**/*.jar"/>
	</fileset>
      </classpath>
      <batchtest fork="yes" todir="${report.dir}/raw/">
	<formatter type="xml"/>
	<fileset dir="${test.dir}">
	  <include name="**/*Test*.java"/>
	</fileset>
      </batchtest>
    </junit>
  </target>

  <target name="reports" depends="test" description="generate user readable
						     reports">
    <junitreport todir="${report.dir}">
      <fileset dir="${report.dir}/raw/">
	<include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${report.dir}/html/"/>
    </junitreport>
  </target>

  <target name="clean-build" depends="clean,jar"/>
  <target name="main" depends="clean,run"/>

  <target name="init-test" description="initialize the test environment">
    <!-- create a time stamp -->
    <tstamp/>
    <!-- create directoru structures -->
    <mkdir dir="${report.dir}"/>
    <mkdir dir="${report.dir}/raw/"/>
    <mkdir dir="${report.dir}/html/"/>
  </target>

</project>
